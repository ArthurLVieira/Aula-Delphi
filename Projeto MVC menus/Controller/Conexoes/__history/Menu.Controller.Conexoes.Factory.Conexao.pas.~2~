unit Menu.Controller.Conexoes.Factory.Conexao;

interface

uses Menu.Controller.Conexoes.Interfaces, Menu.Model.Conexoes.Interfaces;

type

  TControllerConexoesFactoryConexao = class(TInterfacedObject, IControllerConexao)
    private

    public
      constructor Create;
      destructor Destroy; override;
      class function New : IControllerConexao;
      function Conexao : IModelConexao;
  end;

implementation

{ TControllerConexoesFactoryConexao }

function TControllerConexoesFactoryConexao.Conexao: IModelConexao;
begin

end;

constructor TControllerConexoesFactoryConexao.Create;
begin

end;

destructor TControllerConexoesFactoryConexao.Destroy;
begin

  inherited;
end;

class function TControllerConexoesFactoryConexao.New: IControllerConexao;
begin
  Result := Self.Create;
end;

end.
